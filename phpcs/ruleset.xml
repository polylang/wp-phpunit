<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="WP_Syntex" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/squizlabs/PHP_CodeSniffer/master/phpcs.xsd">
	<description>Coding standards for WP Syntex's plugins, mainly focused on naming conventions.</description>

	<!-- Run against custom rules. -->
	<!-- https://github.com/squizlabs/PHP_CodeSniffer -->
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
	<rule ref="Generic.NamingConventions.AbstractClassNamePrefix"/>
	<rule ref="Generic.NamingConventions.ConstructorName"/>
	<rule ref="Generic.NamingConventions.InterfaceNameSuffix"/>
	<rule ref="Generic.NamingConventions.TraitNameSuffix"/>
	<rule ref="PSR2.Methods.MethodDeclaration.Underscore">
		<type>Error</type>
		<message>Method name "%s" must not be prefixed with an underscore</message>
	</rule>
	<rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
		<type>Error</type>
		<message>Property name "%s" must not be prefixed with an underscore</message>
	</rule>
	<rule ref="Squiz.NamingConventions">
		<exclude name="Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"/><!-- No leading underscores for private methods. -->
		<exclude name="Squiz.NamingConventions.ValidFunctionName.MethodDoubleUnderscore"/><!-- Handled by WordPress.NamingConventions.ValidFunctionName.MethodDoubleUnderscore. -->
		<exclude name="Squiz.NamingConventions.ValidFunctionName.PublicUnderscore"/><!-- Handled by PSR2.Methods.MethodDeclaration.Underscore. -->
		<exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/><!-- No leading underscores for private properties. -->
	</rule>

	<!-- Run against WordPress ruleset. -->
	<!-- https://github.com/WordPress/WordPress-Coding-Standards -->
	<rule ref="WordPress">
		<exclude name="Generic.Arrays.DisallowShortArraySyntax"/>
		<exclude name="PHPCompatibility.FunctionNameRestrictions.ReservedFunctionNames.FunctionDoubleUnderscore"/><!-- Handled by Squiz.NamingConventions.ValidFunctionName.DoubleUnderscore. -->
		<exclude name="PHPCompatibility.FunctionNameRestrictions.ReservedFunctionNames.MethodDoubleUnderscore"/><!-- Handled by WordPress.NamingConventions.ValidFunctionName.MethodDoubleUnderscore. -->
		<exclude name="WordPress.Files.FileName"/>
		<exclude name="WordPress.NamingConventions.ValidFunctionName.FunctionDoubleUnderscore"/><!-- Handled by Squiz.NamingConventions.ValidFunctionName.DoubleUnderscore. -->
		<exclude name="WordPress.NamingConventions.ValidFunctionName.FunctionNameInvalid"/><!-- No snake case for function names. -->
		<exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid"/><!-- No snake case for method names. -->
		<exclude name="WordPress.NamingConventions.ValidVariableName"/>
	</rule>

	<!-- Run against the PSR-4 ruleset. -->
	<!-- https://github.com/suin/phpcs-psr4-sniff -->
	<rule ref="Suin"/>
	<!--
	Put `<arg name="basepath" value="."/>` in your phpcs.xml file to indicate the location of the composer.json file.
	-->
</ruleset>
